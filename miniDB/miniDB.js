const fs=require("fs"),uuidv4=require("./modules/uuidv4"),path=require("path");function getDbPath(a){try{fs.statSync(__dirname+"/databases/"+a+"/")}catch(b){if("ENOENT"===b.code){createCollection(a);return __dirname+"/databases/"+a+"/"}}return __dirname+"/databases/"+a+"/"}function createCollection(a){let b=fs.mkdirSync(__dirname+"/databases/"+a+"/");return!!b}function ifChecker(a,b){const c=Object.getOwnPropertyNames(b),d=c.length;let f=0;return c.forEach(function(c){try{a[c]==b[c]&&++f}catch(a){}}),f==d}function read(b,c){const d=getDbPath(b);let e=fs.readdirSync(d),f=[],g=[];for(let a in e)if(".json"===path.extname(e[a])){let b=require(d+e[a]);f.push(b)}let h={};return h[b]=f,JSON.stringify(c)==JSON.stringify({})?h:(f.forEach(a=>{let b=ifChecker(a,c);b&&g.push(a)}),h[b]=g,h)}function createDocument(a,b){try{const c=getDbPath(a);if(b.hasOwnProperty("_id"))throw new Error("`_id` is miniDB's unique property");const d=uuidv4.uuidv4();b._id=d;const e=JSON.stringify(b);fs.writeFileSync(c+d+".json",e);return d}catch(a){return console.error(a),!1}}function deleteCollection(a){try{const b=getDbPath(a);fs.existsSync(b)&&(fs.readdirSync(b).forEach(function(a){let c=b+"/"+a;fs.lstatSync(c).isDirectory()?deleteFolderRecursive(c):fs.unlinkSync(c)}),fs.rmdirSync(b))}catch(a){}return!0}function del(a,b){try{let c=read(a,b);if(1==c.length){const b=getDbPath(a)+c._id+".json";fs.unlinkSync(b)}else c[a].forEach(b=>{fs.unlinkSync(getDbPath(a)+b._id+".json")});0==fs.readdirSync(__dirname+"/databases/"+a+"/").length&&fs.rmdirSync(__dirname+"/databases/"+a+"/")}catch(a){return!1}return!0}function getCollection(){return fs.readdirSync(__dirname+"/databases/")}function update(a,b,c){try{let d=read(a,b)[a];return d.forEach(b=>{const d=Object.getOwnPropertyNames(c),e=b._id;let f=b;d.forEach(a=>{f[a]=c[a]}),fs.writeFileSync(getDbPath(a)+e+".json",JSON.stringify(f))}),!0}catch(a){return a}}module.exports={read:function(a,b){return read(a,b)},createDocument:function(a,b){return createDocument(a,b)},createCollection:function(a){return createCollection(a)},deleteCollection:function(a){return deleteCollection(a)},del:function(a,b){return del(a,b)},getCollection:()=>getCollection(),update:(a,b,c)=>update(a,b,c)};